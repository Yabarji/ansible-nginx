---
- hosts: all
  vars:
    nginx_default_sslcert: '/etc/wildcard.pem'
    nginx_default_sslkey: '/etc/wildcard.key'
    nginx_epel_enabled: true
    nginx_vhosts:
      - servername: minimalproxy.example.com
        upstreamserver: google.com
        ssl: true
        default_server: true
        htpasswd:
          - name: ich
            password: root
  pre_tasks:
    - name: Copy testcerts
      with_items:
        - { name: 'testcert.pem', mode: '0644' }
        - { name: 'wildcard.pem', mode: '0644' }
        - { name: 'testkey.key', mode: '0600' }
        - { name: 'wildcard.key', mode: '0600' }
      become: true
      copy:
        src="{{ item.name }}"
        dest="/etc/{{ item.name }}"
        owner=0
        group=0
        mode="{{ item.mode }}"
    - name: Install epel
      when: ansible_distribution == 'CentOS'
      become: true
      yum: state=present name=epel-release
    - name: Create /etc/facts.d
      become: true
      file:
        state: directory
        path: /etc/ansible/facts.d
  roles:
    - ansible-nginx


- hosts: all
  vars:
    tlscert_create:
      - mydomain.com
      - mydomain.org
    nginx_ssl_enable: false
    nginx_epel_enabled: true
    nginx_vhosts:
      - servername: mydomain.com
        upstreamserver: google.com
      - servername: mydomain.org
        upstreamserver: google.com
      - servername: nullsrv.example.com
        template: null.j2
      - servername: nullsrvwithkey.example.com
        upstreamserver: google.de
      - servername: actualserver.example.com
        server_aliases: ["www.actualserver.example.com"]
        upstreamserverproto: https
        upstreamserver: google.de
        upstreamport: 8080
        sslcert: /etc/testcert.pem
        sslkey: /etc/testkey.key
      - servername: minimalproxyii.example.com
        upstreamserver: google.com
        htpasswd:
          - name: ich
            password: root
  roles:
    - ansible-tlscert
    - ansible-nginx

# This must be in a seperate play, else the handlers get executed because
# nginx_config_only was true the first time they got notified
# which may be irritating
- hosts: all
  vars:
      nginx_config_only: true
      nginx_config_basepath: /tmp/nginxConfig
      nginx_become_enable: false
  roles:
    - role: ansible-nginx
