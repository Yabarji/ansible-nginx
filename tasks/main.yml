---
# tasks file for ansible-nginx

- name: Assert supported OS
  tags: nginx
  assert:
    that: (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7') or
          ansible_distribution_release == 'trusty'

- name: Include OS familiy specific vars
  tags: nginx
  include_vars: "{{ ansible_os_family }}.yml"

- name: Enable EPEL
  tags: nginx
  become: true
  yum: name=epel-release state=installed
  when: ansible_distribution == 'CentOS'

- name: Install nginx
  tags: nginx
  become: true
  action: "{{ ansible_pkg_mgr }} name=nginx state=installed"

- name: Deploy nginx.conf
  tags: nginx
  notify: restart nginx
  become: true
  template:
    src="{{ nginxconf_template|default("builtin_nginx.conf.j2") }}"
    dest=/etc/nginx/nginx.conf
    owner=0
    group=0
    mode=0644

- name: Deploy tls_params
  tags: nginx
  notify: restart nginx
  become: true
  template:
    src="{{ tlsparams_template|default("builtin_tls_params.j2") }}"
    dest=/etc/nginx/tls_params
    owner=0
    group=0
    mode=0644

- name: Deploy proxy_params
  tags: nginx
  notify: reload nginx
  become: true
  copy:
    src=proxy_params
    dest=/etc/nginx/proxy_params
    owner=0
    group=0
    mode=0644

- name: Deploy vhosts
  tags: nginx
  notify: reload nginx
  become: true
  with_items: nginx_vhosts
  template:
    src="{{ item.template|default("builtin_rproxy.j2") }}"
    dest="/etc/nginx/conf.d/{{ item.servername }}.conf"
    owner=0
    group=0
    mode=0644

- name: Deploy SSL Certs
  tags: nginx
  notify: reload nginx
  become: true
  with_items: nginx_vhosts_with_certandkey
  copy:
    src="{{ item.sslcert }}"
    dest="{{ item.sslcertbasepath|default(nginx_default_certbasepath) }}/{{ item.sslcert }}"
    owner=0
    group=0
    mode=0644

- name: Deploy SSL Keys
  tags: nginx
  notify: reload nginx
  become: true
  with_items: nginx_vhosts_with_certandkey
  copy:
    src="{{ item.sslkey }}"
    dest="{{ item.sslkeybasepath|default(nginx_default_keybasepath) }}/{{ item.sslkey }}"
    owner=0
    group=0
    mode=0600

- name: Start and enable nginx
  tags: nginx
  become: true
  service:
    name=nginx
    state=started
    enabled=yes
